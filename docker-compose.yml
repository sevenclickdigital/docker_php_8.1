version: "3.7"
services:

    # imagem Docker
    docker:
        build:
            args:
                user: seven
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./../:/var/www
        depends_on:
            - redis
            - queue
        networks:
            - laravel_networks

    #nGinx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - ${NGINX_PORT:-81}:81
        volumes:
            - ./../:/var/www
            - ./nginx/:/etc/nginx/conf.d/
            - ./certs/:/etc/nginx/ssl/
        networks:
            - laravel_networks

    #MySQL
    mysql:
        image: mysql:latest
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - ${MYSQL_PORT:-3306}:3306
        networks:
            - laravel_networks

    #phpMyadmin
    phpMyadmin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        ports:
            - ${PHPMYADMIN_PORT:-82}:80
        environment:
            PMA_HOST: mysql
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
            UPLOAD_LIMIT: 300M
        depends_on:
            - mysql
        networks:
            - laravel_networks

    #MailHog
    mailhog:
        image: mailhog/mailhog:latest
        restart: unless-stopped
        ports:
            - ${MAIL_PORT:-1025}:1025
            - ${MAIL2_PORT:-83}:8025
        networks:
            - laravel_networks

    #Redis
    redis:
        image: redis:latest
        restart: unless-stopped
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - laravel_networks

    #Queue
    queue:
        build:
            args:
                user: seven
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./../:/var/www
        depends_on:
            - redis
        networks:
            - laravel_networks

    #Memcached
    memcached:
        image: 'memcached:alpine'
        ports:
        - ${MEMCACHED}:11211
        networks:
            - laravel_networks


networks:
    laravel_networks:
        driver: bridge
